# .github/workflows/release.yml

name: 'Publish Release'

on:
  push:
    branches:
      - release # The workflow will run on each push to the 'release' branch

jobs:
  publish-tauri:
    # This is crucial for the action to be able to create a release
    permissions:
      contents: write
      
    strategy:
      fail-fast: false
      matrix:
        include:
          # Builds for both Apple Silicon (aarch64) and Intel (x86_64) Macs
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # This is only needed for the macOS multi-target build
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # Note: libwebkit2gtk-4.1-dev is for Tauri v2.

      - name: Install frontend dependencies
        # IMPORTANT: Change this to 'yarn install' or 'pnpm install' if you use those.
        run: npm install

      - name: Build and release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # The action automatically replaces __VERSION__ with the version from your tauri.conf.json
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true # Creates the release as a draft so you can review it before publishing
          prerelease: false
          args: ${{ matrix.args }}
